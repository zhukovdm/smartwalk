name: smartwalk
services:
  database:
    image: mongo:4.4.23
    container_name: smartwalk-database
    ports:
      - '27017:27017'
    volumes:
      - ../data/assets/database:/data/db
    networks:
      - database-net
    healthcheck:
      test: mongo --eval 'db.runCommand({ping:1}).ok' mongodb://localhost:27017/smartwalk --quiet
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 1m
  routing:
    image: smartwalk/routing:v1.0.0
    build:
      context: ./
      dockerfile: Dockerfile.routing
    container_name: smartwalk-routing
#   ports:
#     - '5000:5000'
    volumes:
      - ../data/assets/routing:/data
    networks:
      - routing-net
    entrypoint: osrm-routed --max-viaroute-size 1000 --algorithm mld /data/${OSRM_REGION_FILE}.osrm
    healthcheck:
      test: curl --head --silent --fail 'http://localhost:5000/route/v1/foot/0,0;0,0' || exit 1
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 2m
  backend:
    image: smartwalk/backend:v1.0.0
    build: ../app/backend/
    container_name: smartwalk-backend
    environment:
      - SMARTWALK_MONGO_CONN_STR=${SMARTWALK_MONGO_CONN_STR}
      - SMARTWALK_OSRM_BASE_URL=${SMARTWALK_OSRM_BASE_URL}
#   ports:
#     - '5017:8080'
    volumes:
      - ./backend/keys/:/root/.aspnet/DataProtection-Keys/
    networks:
      - database-net
      - proxy-net
      - routing-net
    depends_on:
      database:
        condition: service_healthy
      routing:
        condition: service_healthy
    healthcheck:
      test: curl --head --silent --fail 'http://localhost:8080/healthcheck' || exit 1
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 2m
  proxy:
    image: smartwalk/proxy:v1.0.0
    build:
      context: ../app/frontend/
      args:
        - REACT_APP_SMARTWALK_API_ORIGIN=${REACT_APP_SMARTWALK_API_ORIGIN}
    container_name: smartwalk-proxy
    ports:
      - '3000:80'
    networks:
      - proxy-net
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: curl --head --silent --fail http://localhost:80/ || exit 1
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 3m
networks:
  database-net:
  proxy-net:
  routing-net:
